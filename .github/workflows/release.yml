on:
  release:
    types: [published]

name: Release
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: set MR-Linter version
        run: echo "MR_LINTER_VERSION=${{ steps.get_release.outputs.tag_name }}" >> $GITHUB_ENV

      - name: composer deps
        run: composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader

      - name: build phar
        run: cd dev/build/ && composer install && cd ../../ && dev/build/vendor/bin/box compile && git checkout

      - name: sign phar
        uses: phpDocumentor/phar-ga@latest
        env:
          PASSPHRASE: ${{ secrets.PHAR_SIGN_PASSPHRASE }}
          SECRET_KEY: ${{ secrets.PHAR_SIGN_SECRET_KEY }}
        with:
          args: gpg --command-fd 0 --pinentry-mode loopback -u temicska99@mail.ru --batch --detach-sign --output bin/build/mr-linter.phar.asc bin/build/mr-linter.phar

      - name: Upload phar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/build/mr-linter.phar
          asset_name: mr-linter.phar
          asset_content_type: application/octet-stream

      - name: Upload phar.asc
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/build/mr-linter.phar.asc
          asset_name: mr-linter.phar.asc
          asset_content_type: application/octet-stream

      - name: build and publish Docker Image
        env:
          MR_LINTER_DOCKER_USER: ${{ secrets.MR_LINTER_DOCKER_USER }}
          MR_LINTER_DOCKER_PASSWORD: ${{ secrets.MR_LINTER_DOCKER_PASSWORD }}
        run: make docker-pub-build && make docker-pub-push && make docker-pub-push-as-latest
